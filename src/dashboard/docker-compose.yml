version: "3.3"

services:

  ics_nginx:
    container_name: ics_web
    image: nginx:latest
    volumes:
      - type: bind
        source: ./www/conf.d/nginx.conf
        target: /etc/nginx/conf.d/nginx.conf
      - type: bind
        source: ./www/public_html/
        target: /var/www/public_html/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ics_net
    depends_on:
      - ics_flask
    restart: unless-stopped


  ics_flask:
    container_name: ics_api
    # env_file: .env
    build: ./api/
    # command: gunicorn --config gunicorn.config.py wsgi:app
    # command: python3 wsgi.py
    # volumes:
    #   - type: bind
    #     source: ./api/app/static/docs.html
    #     target: /app/static/docs.html
    depends_on:
      - ics_postgres
    networks:
      - ics_net
    ports:
      - "5000:5000"
      - "8000:8000"
    restart: unless-stopped


  ics_memcached:
    container_name: ics_cache
    image: memcached:latest
    networks:
      - ics_net
    ports:
      - "11211:11211"
    restart: unless-stopped


  ics_postgres:
    container_name: ics_db
    image: kartoza/postgis:13.0
    # env_file: .env
    volumes:
      #- ./sql/initial_data:/var/lib/postgresql/initial_data
      #- ./sql/ics_initial.sh:/docker-entrypoint-initdb.d/ics_initial.sh
      - ./sql/ics_db_dump.sql:/docker-entrypoint-initdb.d/ics_db_dump.sql
    environment:
    - POSTGRES_DB=ics, ics_test
    - POSTGRES_USER=david  # Set the desired username
    - POSTGRES_PASSWORD=Fp2mQC4&#7JZ
    networks:
      - ics_net
    ports:
      - "5432:5432"
    restart: unless-stopped


networks:
  ics_net:
